syntax = "proto3";
option go_package = "protobuf";

// Echo Service
// Similar to annotated_echo_service.proto but without annotations. See
// echo_service.yaml for the equivalent of the annotations in
// gRPC API configuration format.
//
// Echo Service API consists of a single service which returns
// a message.
package dbservice_factory;

// Do not need annotations.proto, can still use well known types as usual
import "google/protobuf/duration.proto";

// UnannotatedSimpleMessage represents a simple message sent to the unannotated Echo service.
message SimpleMessage {
    // Id represents the message identifier.
    string id = 1;
    int64 num = 2;
    google.protobuf.Duration duration = 3;
}

// Echo service responds to incoming echo requests.
service EchoService {
    // Echo method receives a simple message and returns it.
    //
    // The message posted as the id parameter will also be
    // returned.
    rpc Echo(SimpleMessage) returns (SimpleMessage);

    // EchoBody method receives a simple message and returns it.
    rpc EchoBody(SimpleMessage) returns (SimpleMessage);

    // EchoDelete method receives a simple message and returns it.
    rpc EchoDelete(SimpleMessage) returns (SimpleMessage);
}